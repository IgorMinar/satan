Automated Process Reaper for Unix Systems

Satan does just one thing and one thing well, kill processes. This is useful for systems such as Solaris's SMF that can do self healing. Let Satan kill while SMF revives. The Satan name is a play off of the God Monitor http://god.rubyforge.org/ 

God overlaps too much in functionality with SMF where it is not practical to run on Solaris.

The configuration is all done in Ruby, clean and simple.

Satan.watch do |s|
  s.name = "jetty-instances"          # name of job
  s.user = "webservd"                 # under what user
  s.group = "webservd"                # under what group
  s.deamon = "java"                   # deamon binary to grep for
  s.args = "jetty"                    # look for specific arguments
  s.debug = true                      # if to write out debug information
  s.safe_mode = false                 # If in safe mode, satan will not kill ;-(
  s.interval = 10.seconds             # interval to run at to collect statistics
  s.sleep_after_kill = 1.minute       # sleep after killing, satan is tired!
  
  s.kill_if do |process|
    process.condition(:cpu) do |cpu|      # on cpu condition
      cpu.name = "50% CPU limit"          # name for job
      cpu.above = 50.percent              # if above certain percentage
      cpu.times = 5                       # how many times we can hit this condition before killing
    end
    
    process.condition(:memory) do |memory|  # on memory condition
      memory.name = "800MB limit"           # name for job
      memory.above = 800.megabytes          # limit for memory use
      memory.times = 5                      # how many times we can hit this condition before killing
    end
  end
end